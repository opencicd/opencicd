// Copyright 2019 OpenCICD Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package opencicd.v1.identity;

option go_package = "identitypb";
option java_multiple_files = true;
option java_outer_classname = "UserApiProto";
option java_package = "com.opencicd.v1.identity";

import "api/proto/v1/core/get_options.proto";
import "api/proto/v1/core/list_options.proto";
import "api/proto/v1/core/update_options.proto";
import "api/proto/v1/identity/user.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service UserAPI {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
}

message CreateUserRequest {
  opencicd.v1.identity.User user = 1;
}

message CreateUserResponse {
  opencicd.v1.identity.User user = 1;
}

message ListUsersRequest {
  opencicd.v1.core.ListOptions options = 1;
}

message ListUsersResponse {
  repeated opencicd.v1.identity.User users = 1;
}

message GetUserRequest {
  string id = 1 [(gogoproto.customname) = "ID"];
  opencicd.v1.core.GetOptions options = 2;
}

message GetUserResponse {
  opencicd.v1.identity.User user = 1;
}

message UpdateUserRequest {
  opencicd.v1.identity.User user = 1;
  opencicd.v1.core.UpdateOptions options = 2;
}

message UpdateUserResponse {
  opencicd.v1.identity.User user = 1;
}

message DeleteUserRequest {
  string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteUserResponse {}
